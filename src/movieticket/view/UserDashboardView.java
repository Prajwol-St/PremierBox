/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package movieticket.view;

import java.awt.BorderLayout;
import java.awt.CardLayout;
import java.awt.Color;
import java.awt.FlowLayout;
import java.awt.Font;
import java.awt.GridBagConstraints;
import java.sql.SQLException;
import java.util.List;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTextField;
import movieticket.dao.CRUDAdminDAO;
import movieticket.model.MoviesData;
import movieticket.view.components.MovieCard;
    

/**
 *
 * @author Hp
 */
public class UserDashboardView extends javax.swing.JFrame {

    /**
     * Creates new form UserDashboardView
     */
    private final javax.swing.JScrollPane availableMoviesScrollPane;
    private JTextField searchField;
    private JButton searchButton;



    public UserDashboardView() {
        initComponents();
        searchField = new JTextField(20);
        searchButton = new JButton("Search");
        searchField.setFont(new Font("Segoe UI", Font.PLAIN, 14));
        searchButton.setFont(new Font("Segoe UI", Font.BOLD, 14));
        searchButton.setBackground(new Color(25, 25, 112));
        searchButton.setForeground(Color.WHITE);
        searchButton.setFocusPainted(false);

        JPanel searchPanel = new JPanel(new FlowLayout(FlowLayout.LEFT, 20, 10));
        searchPanel.add(new JLabel("Search:"));
        searchPanel.add(searchField);
        searchPanel.add(searchButton);

        AvailableMovies = new JPanel();
        AvailableMovies.setLayout(new FlowLayout(FlowLayout.LEFT, 20, 20));

        availableMoviesScrollPane = new JScrollPane(AvailableMovies);
        availableMoviesScrollPane.setVerticalScrollBarPolicy(JScrollPane.VERTICAL_SCROLLBAR_ALWAYS);
        availableMoviesScrollPane.setHorizontalScrollBarPolicy(JScrollPane.HORIZONTAL_SCROLLBAR_NEVER);
        availableMoviesScrollPane.setBorder(null);

        JPanel containerPanel = new JPanel();
        containerPanel.setLayout(new BorderLayout());
        containerPanel.add(searchPanel, BorderLayout.NORTH);
        containerPanel.add(availableMoviesScrollPane, BorderLayout.CENTER);

        UserDashboardCardPanel.add(UserDashboard, "UserDashboard");
        UserDashboardCardPanel.add(containerPanel, "AvailableMovies");

        searchButton.addActionListener(e -> {
            String keyword = searchField.getText().trim();
            displayAvailableMovies(keyword);
        });

    }
    
    private void displayAvailableMovies() {
        String keyword = searchField.getText().trim();
        displayAvailableMovies(keyword);
    }
    
     private void displayAvailableMovies(String keyword) {
        AvailableMovies.removeAll(); // Clear previous content
        AvailableMovies.setLayout(new java.awt.GridBagLayout());
        
        
        CRUDAdminDAO dao = new CRUDAdminDAO();
    try {
        List<MoviesData> allMovies = dao.getAllMoviesWithImages();
        List<MoviesData> filteredMovies = allMovies.stream().filter(movie -> movie.getTitle().toLowerCase().contains(keyword.toLowerCase())).toList();

        GridBagConstraints gbc = new java.awt.GridBagConstraints();
        gbc.insets = new java.awt.Insets(20, 30, 20, 30); // Top, Left, Bottom, Right spacing
        gbc.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gbc.fill = java.awt.GridBagConstraints.NONE;

        int col = 0;
        int row = 0;

        for (MoviesData movie : filteredMovies) {
            MovieCard card = new MovieCard(movie);

            gbc.gridx = col;
            gbc.gridy = row;

            AvailableMovies.add(card, gbc);

            col++;
            if (col >= 2) { 
                col = 0;
                row++;
            }
        }
    } catch (SQLException e) {
        JOptionPane.showMessageDialog(this, "Failed to load movies.", "Error", JOptionPane.ERROR_MESSAGE);
    }

    AvailableMovies.revalidate();
    AvailableMovies.repaint();
}
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainPanel1 = new javax.swing.JPanel();
        userDashboardButton = new javax.swing.JButton();
        userAvailableMoviesButton = new javax.swing.JButton();
        logoutButton = new javax.swing.JButton();
        UserDashboardCardPanel = new javax.swing.JPanel();
        UserDashboard = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        AvailableMovies = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        mainPanel1.setBackground(new java.awt.Color(163, 25, 25));
        mainPanel1.setForeground(new java.awt.Color(255, 255, 255));

        userDashboardButton.setBackground(new java.awt.Color(0, 0, 0));
        userDashboardButton.setFont(new java.awt.Font("Helvetica Neue", 0, 16)); // NOI18N
        userDashboardButton.setForeground(new java.awt.Color(255, 255, 255));
        userDashboardButton.setText("Dashboard");
        userDashboardButton.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(25, 25, 112), 1, true));
        userDashboardButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userDashboardButtonActionPerformed(evt);
            }
        });

        userAvailableMoviesButton.setBackground(new java.awt.Color(0, 0, 0));
        userAvailableMoviesButton.setFont(new java.awt.Font("Helvetica Neue", 0, 16)); // NOI18N
        userAvailableMoviesButton.setForeground(new java.awt.Color(255, 255, 255));
        userAvailableMoviesButton.setText("Available Movies");
        userAvailableMoviesButton.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(25, 25, 112), 1, true));
        userAvailableMoviesButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userAvailableMoviesButtonActionPerformed(evt);
            }
        });

        logoutButton.setBackground(new java.awt.Color(204, 0, 0));
        logoutButton.setFont(new java.awt.Font("Helvetica Neue", 0, 16)); // NOI18N
        logoutButton.setForeground(new java.awt.Color(255, 255, 255));
        logoutButton.setText("Log Out");
        logoutButton.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(25, 25, 112), 1, true));
        logoutButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout mainPanel1Layout = new javax.swing.GroupLayout(mainPanel1);
        mainPanel1.setLayout(mainPanel1Layout);
        mainPanel1Layout.setHorizontalGroup(
            mainPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanel1Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(mainPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(userDashboardButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(userAvailableMoviesButton, javax.swing.GroupLayout.DEFAULT_SIZE, 130, Short.MAX_VALUE)
                    .addComponent(logoutButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(21, Short.MAX_VALUE))
        );
        mainPanel1Layout.setVerticalGroup(
            mainPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanel1Layout.createSequentialGroup()
                .addGap(220, 220, 220)
                .addComponent(userDashboardButton, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(userAvailableMoviesButton, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 246, Short.MAX_VALUE)
                .addComponent(logoutButton, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15))
        );

        UserDashboardCardPanel.setLayout(new java.awt.CardLayout());

        jLabel1.setText("jLabel1");

        javax.swing.GroupLayout UserDashboardLayout = new javax.swing.GroupLayout(UserDashboard);
        UserDashboard.setLayout(UserDashboardLayout);
        UserDashboardLayout.setHorizontalGroup(
            UserDashboardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 651, Short.MAX_VALUE)
            .addGroup(UserDashboardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(UserDashboardLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jLabel1)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        UserDashboardLayout.setVerticalGroup(
            UserDashboardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 590, Short.MAX_VALUE)
            .addGroup(UserDashboardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(UserDashboardLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jLabel1)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        UserDashboardCardPanel.add(UserDashboard, "UserDashboard");

        jLabel2.setText("jLabel2");

        javax.swing.GroupLayout AvailableMoviesLayout = new javax.swing.GroupLayout(AvailableMovies);
        AvailableMovies.setLayout(AvailableMoviesLayout);
        AvailableMoviesLayout.setHorizontalGroup(
            AvailableMoviesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 651, Short.MAX_VALUE)
            .addGroup(AvailableMoviesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(AvailableMoviesLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jLabel2)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        AvailableMoviesLayout.setVerticalGroup(
            AvailableMoviesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 590, Short.MAX_VALUE)
            .addGroup(AvailableMoviesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(AvailableMoviesLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jLabel2)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        UserDashboardCardPanel.add(AvailableMovies, "AvailableMovies");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(mainPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 664, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addContainerGap(187, Short.MAX_VALUE)
                    .addComponent(UserDashboardCardPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 651, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap()))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(mainPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(UserDashboardCardPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void userDashboardButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userDashboardButtonActionPerformed
        CardLayout cl = (CardLayout) UserDashboardCardPanel.getLayout();
        cl.show(UserDashboardCardPanel, "UserDashboard");
    }//GEN-LAST:event_userDashboardButtonActionPerformed

    private void userAvailableMoviesButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userAvailableMoviesButtonActionPerformed
        // TODO add your handling code here:
    CardLayout cl = (CardLayout) UserDashboardCardPanel.getLayout();
    cl.show(UserDashboardCardPanel, "AvailableMovies");
    displayAvailableMovies();
    }//GEN-LAST:event_userAvailableMoviesButtonActionPerformed

    private void logoutButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoutButtonActionPerformed
        int response = JOptionPane.showConfirmDialog(
        this,
        "Are you sure you want to log out?",
        "Logout Confirmation",
        JOptionPane.YES_NO_OPTION,
        JOptionPane.QUESTION_MESSAGE
    );

    if (response == JOptionPane.YES_OPTION) {
        this.dispose();

        new LoginView().setVisible(true);
    }
    }//GEN-LAST:event_logoutButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UserDashboardView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UserDashboardView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UserDashboardView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UserDashboardView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UserDashboardView().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel AvailableMovies;
    private javax.swing.JPanel UserDashboard;
    private javax.swing.JPanel UserDashboardCardPanel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JButton logoutButton;
    private javax.swing.JPanel mainPanel1;
    private javax.swing.JButton userAvailableMoviesButton;
    private javax.swing.JButton userDashboardButton;
    // End of variables declaration//GEN-END:variables

  
     public JPanel getCardPanel(){
        return UserDashboardCardPanel;
    }
    
    public JButton getDashboard(){
        return userDashboardButton;
    }
  
  public JButton getAvailableMovies(){
        return userAvailableMoviesButton;
    }
  

}
